plugins {
    id 'java'
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects { subproject ->
    if (!(subproject.name in ['app'])) {
        apply plugin: 'dev.architectury.loom'
        apply plugin: 'architectury-plugin'
        apply plugin: 'maven-publish'

        var archives_name
        base {
            if (subproject.name in ['forge_coremod']) {
                archivesName = "$rootProject.archives_name-forge"
            } else {
                archivesName = "$rootProject.archives_name-$project.name"
            }
            archives_name = archivesName
        }

        repositories {
        }

        loom {
            silentMojangMappingsLicense()
        }

        dependencies {
            minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
            mappings loom.officialMojangMappings()
        }

        java {
            withSourcesJar()

            sourceCompatibility = JavaVersion.VERSION_17
            targetCompatibility = JavaVersion.VERSION_17
        }

        tasks.withType(JavaCompile).configureEach {
            it.options.release = 17
        }
    }
}


task collectJars(type: Copy) {
    def deps = [':fabric', ':forge_coremod']
            .collect { path -> project(path).tasks.remapJar }
    dependsOn deps
    from deps

    into 'build/libs'
}

assemble.dependsOn collectJars